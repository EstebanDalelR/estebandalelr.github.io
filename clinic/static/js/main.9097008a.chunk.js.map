{"version":3,"sources":["Components/Topbar.jsx","Components/Sidebar.jsx","Alerts/Alerts.jsx","Registry/InputMedicine.jsx","Registry/OutputMedicine.jsx","Calendar.jsx","Registry/Stock.jsx","App.js","serviceWorker.js","index.js"],"names":["TopBar","props","react_default","a","createElement","AppBar_default","position","className","classNames","classes","appBar","Object","defineProperty","appBarShift","open","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","handleDrawerOpen","menuButton","hide","Menu_default","Typography_default","variant","noWrap","PersistentDrawerLeft","state","_this","setState","handleDrawerClose","_this2","this","_this$props","theme","root","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","ListItem_default","button","Avatar_default","alt","src","bigAvatar","ListItemText_default","primary","secondary","text","icon","Warning_default","onClickValue","MoveToInbox_default","Storage_default","ArrowUpward_default","CalendarToday_default","map","listItem","index","key","changeScreen","ListItemIcon_default","React","Component","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","unit","contentShift","margin","height","withTheme","Alerts","Paper_default","style","align","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","date","medicine","type","lot","expiration","inputPerson","inputDate","alertLevel","alert","rowColor","backgroundColor","InputMedicine","_useState","useState","_useState2","slicedToArray","medicineName","setMedicineName","_useState3","_useState4","setLot","_useState5","_useState6","cost","setCost","_useState7","_useState8","presentation","setPresentation","_useState9","Date","now","_useState10","setExpiration","flexDirection","index_es","container","item","md","TextField_default","required","fullWidth","id","label","onChange","e","target","value","Select_default","InputProps","startAdornment","InputAdornment_default","marginTop","toLocaleString","weekday","year","month","day","LinearProgress_default","Button_default","OutputMedicine","setMedicine","rfid","signature","patient","setPatient","Checkbox_default","checked","today","lastWeek","getFullYear","getMonth","getDate","Calendar","es","window","innerWidth","innerHeight","selected","disabledDays","minDate","Stock","identifier","name","volume","concentration","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","currentScreen","screen","CssBaseline_default","Sidebar","bind","Calendar_Calendar","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9097008a.chunk.js","sourcesContent":["import React from 'react'\n\nimport classNames from 'classnames'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\n\nimport MenuIcon from '@material-ui/icons/Menu'\n\nexport default function TopBar (props) {\n  return (\n    <AppBar\n      position='fixed'\n      className={classNames(props.classes.appBar, {\n        [props.classes.appBarShift]: props.open\n      })}\n    >\n      <Toolbar disableGutters={!props.open}>\n        <IconButton\n          color='inherit'\n          aria-label='Open drawer'\n          onClick={props.handleDrawerOpen}\n          className={classNames(props.classes.menuButton, props.open && props.classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant='h6' color='inherit' noWrap>\n        Farmacia\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React from 'react'\n\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport List from '@material-ui/core/List';\nimport Avatar from '@material-ui/core/Avatar'\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Warning from '@material-ui/icons/Warning';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Storage from '@material-ui/icons/Storage';\nimport MoveToInbox from '@material-ui/icons/MoveToInbox';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport TopBar from './Topbar';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 60,\n    height: 60,\n  },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n          <TopBar \n          classes={classes} \n          open={open}\n          handleDrawerOpen={this.handleDrawerOpen} />\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem button >\n              <Avatar alt='Remy Sharp' src='./avatar.jpg' className={classes.bigAvatar} />\n              <ListItemText primary={'Juan Pablo Montoya'} secondary={\"Farmacólogo\"}/>\n            </ListItem>\n            <Divider />\n            {[\n              {text: 'Alertas', icon: <Warning />, onClickValue:\"Alerts\"}, \n              {text: 'Ingresos', icon: <MoveToInbox />, onClickValue:\"InputMedicine\"}, \n              {text: 'Bodega', icon: <Storage />, onClickValue:\"Storage\"}, \n              {text:'Egresos', icon: <ArrowUpward />, onClickValue:\"OutputMedicine\"},\n              {text: 'Calendario', icon: <CalendarToday />, onClickValue:\"Calendar\"} \n            ].map(\n                (listItem, index) => (\n              <ListItem \n              button \n              key={listItem.text}\n              onClick={()=> {\n                this.props.changeScreen(listItem.onClickValue)\n                this.handleDrawerClose()\n              }}\n              >\n                <ListItemIcon>{listItem.icon}</ListItemIcon>\n                <ListItemText primary={listItem.text} />\n            </ListItem>\n            ))}\n          </List>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nexport default function Alerts (props) {\n  let allAlerts = [\n    {\n      date: '01/03/19',\n      medicine: 'NeuralTrix',\n      type: 'Pronta Expiración',\n      lot: '185SN',\n      expiration: '09/03/19',\n      inputPerson: 'Juan Pablo Montoya',\n      inputDate: '27/12/18',\n      alertLevel: 2\n    },\n    {\n      date: '07/03/19',\n      medicine: 'Adamantium',\n      type: 'Bajo Stock',\n      lot: '7892333/00/09',\n      expiration: '22/09/19',\n      inputPerson: 'Juan Pablo Montoya',\n      inputDate: '27/12/18',\n      alertLevel: 1\n    },\n    {\n      date: '07/03/19',\n      medicine: 'Adamantium',\n      type: 'Bajo Stock',\n      lot: '7892333/00/09',\n      expiration: '22/09/19',\n      inputPerson: 'Juan Pablo Montoya',\n      inputDate: '27/12/18',\n      alertLevel: 1\n    },\n    {\n      date: '07/03/19',\n      medicine: 'Adamantium',\n      type: 'Agotado',\n      lot: '7892333/00/09',\n      expiration: '22/09/19',\n      inputPerson: 'Juan Pablo Montoya',\n      inputDate: '27/12/18',\n      alertLevel: 3\n    },\n    {\n      date: '01/03/19',\n      medicine: 'NeuralTrix',\n      type: 'Pronta Expiración',\n      lot: '185SN',\n      expiration: '09/03/19',\n      inputPerson: 'Juan Pablo Montoya',\n      inputDate: '27/12/18',\n      alertLevel: 2\n    },\n    {\n      date: '07/03/19',\n      medicine: 'Adamantium',\n      type: 'Bajo Stock',\n      lot: '7892333/00/09',\n      expiration: '22/09/19',\n      inputPerson: 'Juan Pablo Montoya',\n      inputDate: '27/12/18',\n      alertLevel: 1\n    }\n  ]\n  return (\n    <Paper\n      style={{\n        margin: 15\n      }}\n    >\n      <Typography variant='h4' align='left'>\n        Alertas\n      </Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <Typography variant='h6'>\n              Fecha\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Medicamento\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Tipo\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Lote\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Fecha Vencimiento\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Ingresado Por\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Fecha Vencimiento\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allAlerts.map((alert, index) => {\n            let rowColor = '#fff'\n            switch (alert.alertLevel) {\n              case 3:\n                rowColor = '#ef9a9a'\n                break\n              case 2:\n                rowColor = '#ffee58'\n                break\n              default:\n                break\n            }\n            return (\n              <TableRow\n                key={index}\n                style={{\n                  backgroundColor: rowColor\n                }}\n              >\n                <TableCell>\n                  <Typography>\n                    {alert.date}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {alert.medicine}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {alert.type}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {alert.lot}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {alert.expiration}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {alert.inputPerson}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {alert.inputDate}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n","import React, { useState } from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Avatar from '@material-ui/core/Avatar'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport { Grid, Typography, MenuItem } from '@material-ui/core'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nexport default function InputMedicine (props) {\n  const [medicineName, setMedicineName] = useState('')\n  const [lot, setLot] = useState('')\n  const [cost, setCost] = useState('')\n  const [presentation, setPresentation] = useState('Ampolleta 40')\n  const [expiration, setExpiration] = useState(Date.now())\n  let dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n  let now = new Date()\n  return (\n    <Paper\n      style={{\n        margin: 15\n      }}\n    >\n      <form\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 15\n        }}>\n        <Typography variant='h4' align='left'>\n             Registro de Entrada\n        </Typography>\n        <Grid container>\n          <Grid item md={6}>\n            <TextField\n              required\n              fullWidth\n              id='nombre'\n              label='Nombre'\n              onChange={(e) => setMedicineName(e.target.value)}\n              value={medicineName}\n              margin='normal'\n              type='text'\n            />\n          </Grid>\n          <Grid item md={6}>\n            <Select\n              required\n              fullWidth\n              id='nombre'\n              label='Presentación'\n              onChange={(e) => setPresentation(e.target.value)}\n              value={presentation}\n              type='text'\n              margin='none'\n            >\n              <MenuItem value={'Ampolleta 40'}>\n               Ampolleta 40\n              </MenuItem>\n              <MenuItem value={'Ampolleta 60'}>\n               Ampolleta 60\n              </MenuItem>\n              <MenuItem value={'Ampolleta 100'}>\n               Ampolleta 100\n              </MenuItem>\n            </Select>\n          </Grid>\n          <Grid item md={6}>\n            <TextField\n              required\n              fullWidth\n              id='lote'\n              label='Lote'\n              onChange={(e) => setLot(e.target.value)}\n              value={lot}\n              margin='normal'\n              type='text'\n            />\n\n          </Grid>\n          <Grid item md={6}>\n            <TextField\n              required\n              fullWidth\n              id='costo'\n              label='Costo'\n              onChange={(e) => setCost(e.target.value)}\n              value={cost}\n              margin='normal'\n              type='number'\n              InputProps={{\n                startAdornment: <InputAdornment position='start'>$</InputAdornment>\n              }}\n            />\n          </Grid>\n          <Grid item md={6}>\n            <TextField\n              required\n              fullWidth\n              id='fecha vencimiento'\n              label='Fecha Vencimiento'\n              onChange={(e) => setExpiration(e.target.value)}\n              value={expiration}\n              type='date'\n              margin='normal'\n            />\n          </Grid>\n          <Grid item md={12}>\n            <div\n              style={{\n                margin: 15\n              }}>\n              <Grid container>\n                <Grid item md={4}>\n                  <Paper style={{ margin: 5 }}>\n                    <Grid container>\n                      <Grid item md={3}>\n                        <Avatar\n                          alt='Remy Sharp'\n                          src='./avatar.jpg'\n                          style={{ margin: 'auto', marginTop: 5 }} />\n                      </Grid>\n                      <Grid item md={9}>\n                        <Typography variant='h6'>\n                        Juan Pablo Montoya\n                        </Typography>\n                        <Typography >\n                      Farmacólogo\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item md={4}>\n                  <Paper\n                    style={{ margin: 5 }}>\n                    <Typography variant='h6'>\n                Fecha de Ingreso\n                    </Typography>\n                    <Typography >\n                      {now.toLocaleString('es-ES', dateOptions)}\n                    </Typography>\n                  </Paper>\n                </Grid>\n                <Grid item md={4}>\n                  <Paper style={{ margin: 5 }}>\n                    <Typography variant='h6'>\n                Sensor RFID\n                    </Typography>\n                    <Typography >\n                Esperando Sensor...\n                    </Typography>\n                    <LinearProgress />\n                  </Paper>\n                </Grid>\n              </Grid>\n            </div>\n          </Grid>\n        </Grid>\n        <Button variant='contained'>\n           Enviar\n        </Button>\n      </form>\n    </Paper>\n  )\n}\n","import React, { useState } from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Avatar from '@material-ui/core/Avatar'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport TextField from '@material-ui/core/TextField'\nimport { Grid, Typography, MenuItem, List, ListItem, ListItemText, Divider } from '@material-ui/core'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nexport default function OutputMedicine (props) {\n  const [medicine, setMedicine] = useState(false)\n  const [rfid, setRfid] = useState(false)\n  const [signature, setSignature] = useState(false)\n  const [patient, setPatient] = useState(false)\n\n  let dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n  let now = new Date()\n  return (\n    <Paper\n      style={{\n        margin: 15\n      }}\n    >\n      <form\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 15\n        }}>\n        <Typography variant='h4' align='left'>\n             Registro de Salida\n        </Typography>\n        <List>\n          <ListItem\n            button\n            onClick={() => setMedicine(!medicine)}>\n            <Grid container>\n              <Grid item md={4}>\n                <Grid container>\n                  <Grid item md={4}>\n                    <Checkbox\n                      checked={medicine}\n                    />\n                  </Grid>\n                  <Grid item md={6}>\n                    <ListItemText primary='Adamantium' secondary='Ampolleta 40' />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md={4}>\n                <Grid container>\n                  <Grid item md={6}>\n                    <ListItemText primary='40 mg/mL' secondary='Concentración' />\n                  </Grid>\n                  <Grid item md={6}>\n                    <ListItemText primary='2000 mg' secondary='Contenido' />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md={4}>\n                <Grid container>\n                  <Grid item md={6}>\n                    <ListItemText primary='50 mL' secondary='Volumen' />\n                  </Grid>\n                  <Grid item md={6}>\n                    <ListItemText primary='Intravenosa' secondary='Administración' />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </ListItem>\n          <Divider />\n          <ListItem\n            button\n            onClick={() => setPatient(!patient)}>\n            <Grid container>\n              <Grid item md={5}>\n                <Grid container>\n                  <Grid item md={2}>\n                    <Checkbox\n                      checked={patient}\n                    />\n                  </Grid>\n                  <Grid item md={5}>\n                    <ListItemText primary='Katherin Ibargüen' secondary='Paciente' />\n                  </Grid>\n                  <Grid item md={5}>\n                    <ListItemText primary='Adamantum' secondary='20mL' />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md={5}>\n                <Grid container>\n                  <Grid item md={4}>\n                    <ListItemText primary='2.3 m2' secondary='Área Corporal' />\n                  </Grid>\n                  <Grid item md={4}>\n                    <ListItemText primary='40 mg/m2' secondary='Concentración' />\n                  </Grid>\n                  <Grid item md={4}>\n                    <ListItemText primary='92 mg' secondary='Dosis' />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md={2}>\n                <Grid container>\n                  <Grid item md={6}>\n                    <Avatar\n                      alt='Remy Sharp'\n                      src='./avatar.jpg'\n                      style={{ margin: 'auto', marginTop: 5 }} />\n                  </Grid>\n                  <Grid item md={6}>\n                    <ListItemText primary='James Rodriguez' secondary='Oncólogo' />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </ListItem>\n          <Divider />\n        </List>\n\n        <Grid container>\n\n          <Grid item md={12}>\n            <div\n              style={{\n                margin: 15\n              }}>\n              <Grid container>\n                <Grid item md={4}>\n                  <Paper style={{ margin: 5 }}>\n                    <Grid container>\n                      <Grid item md={1}>\n                        <Checkbox\n                          checked={signature}\n                        />\n                      </Grid>\n                      <Grid item md={3}>\n                        <Avatar\n                          alt='Remy Sharp'\n                          src='./avatar.jpg'\n                          style={{ margin: 'auto', marginTop: 5 }} />\n                      </Grid>\n                      <Grid item md={8}>\n                        <Typography variant='h6'>\n                        Juan Pablo Montoya\n                        </Typography>\n                        <Typography >\n                         Farmacólogo\n                        </Typography>\n                      </Grid>\n                      <Grid item md={12}>\n                        <LinearProgress />\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item md={4}>\n                  <Paper\n                    style={{ margin: 5 }}>\n                    <Typography variant='h6'>\n                      Fecha de Egreso\n                    </Typography>\n                    <Typography >\n                      {now.toLocaleString('es-ES', dateOptions)}\n                    </Typography>\n                  </Paper>\n                </Grid>\n                <Grid item md={4}>\n                  <Paper style={{ margin: 5 }}>\n                    <Grid container>\n                      <Grid item md={2}>\n                        <Checkbox\n                          checked={rfid}\n                        />\n                      </Grid>\n                      <Grid item md={10}>\n                        <Typography variant='h6'>\n                         Sensor RFID\n                        </Typography>\n                        <Typography >\n                         Esperando Sensor...\n                        </Typography>\n                      </Grid>\n                      <Grid item md={12}>\n                        <LinearProgress />\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </div>\n          </Grid>\n        </Grid>\n        <Button variant='contained'>\n         Enviar\n        </Button>\n      </form>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport InfiniteCalendar from 'react-infinite-calendar'\nimport 'react-infinite-calendar/styles.css' // only needs to be imported once\n\n// Render the Calendar\nvar today = new Date()\nvar lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7)\nexport default class Calendar extends React.Component {\n  render () {\n    return (\n      <div\n        style={{\n          marginTop: 60,\n          marginLeft: 15\n        }}\n      >\n        <InfiniteCalendar\n          width={window.innerWidth - 40}\n          height={window.innerHeight - 60}\n          selected={today}\n          disabledDays={[0, 6]}\n          minDate={lastWeek}\n        />\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nexport default function Stock (props) {\n  let allAlerts = [\n    {\n      identifier: 'HDS2X',\n      name: 'NeuralTrix',\n      presentation: 'Ampolla',\n      content: '100mg',\n      volume: '4mL',\n      concentration: '25mg/mL',\n      lot: '185SN',\n      inputDate: '27/12/18',\n      inputPerson: 'Juan Pablo Montoya',\n      expiration: '09/03/19'\n    },\n    {\n      identifier: 'HDS2X',\n      name: 'NeuralTrix',\n      presentation: 'Ampolla',\n      content: '100mg',\n      volume: '4mL',\n      concentration: '25mg/mL',\n      lot: '185SN',\n      inputDate: '27/12/18',\n      inputPerson: 'Juan Pablo Montoya',\n      expiration: '09/03/19'\n    },\n    {\n      identifier: 'HDS2X',\n      name: 'NeuralTrix',\n      presentation: 'Ampolla',\n      content: '100mg',\n      volume: '4mL',\n      concentration: '25mg/mL',\n      lot: '185SN',\n      inputDate: '27/12/18',\n      inputPerson: 'Juan Pablo Montoya',\n      expiration: '09/03/19'\n    },\n    {\n      identifier: 'HDS2X',\n      name: 'NeuralTrix',\n      presentation: 'Ampolla',\n      content: '100mg',\n      volume: '4mL',\n      concentration: '25mg/mL',\n      lot: '185SN',\n      inputDate: '27/12/18',\n      inputPerson: 'Juan Pablo Montoya',\n      expiration: '09/03/19'\n    },\n    {\n      identifier: 'HDS2X',\n      name: 'NeuralTrix',\n      presentation: 'Ampolla',\n      content: '100mg',\n      volume: '4mL',\n      concentration: '25mg/mL',\n      lot: '185SN',\n      inputDate: '27/12/18',\n      inputPerson: 'Juan Pablo Montoya',\n      expiration: '09/03/19'\n    },\n    {\n      identifier: 'HDS2X',\n      name: 'NeuralTrix',\n      presentation: 'Ampolla',\n      content: '100mg',\n      volume: '4mL',\n      concentration: '25mg/mL',\n      lot: '185SN',\n      inputDate: '27/12/18',\n      inputPerson: 'Juan Pablo Montoya',\n      expiration: '09/03/19'\n    }\n  ]\n  return (\n    <Paper\n      style={{\n        margin: 15\n      }}\n    >\n      <Typography variant='h4' align='left'>\n        Medicamentos en Bodega\n      </Typography>\n      <Table padding='dense' >\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <Typography variant='h6'>\n              Unique identifier\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Nombre\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Presentación\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Contenido\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Volumen\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Concentración\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Lote\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Fecha Ingreso\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Ingresado Por\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography variant='h6'>\n              Fecha Vencimiento\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allAlerts.map((medicine, index) => {\n            return (\n              <TableRow\n                key={index}\n              >\n                <TableCell>\n                  <Typography>\n                    {medicine.identifier}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {medicine.name}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {medicine.presentation}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {medicine.content}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {medicine.volume}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {medicine.concentration}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {medicine.lot}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {medicine.inputDate}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {medicine.inputPerson}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {medicine.expiration}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n","import React, { Component } from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport './App.css'\n\nimport Sidebar from './Components/Sidebar'\nimport Alerts from './Alerts/Alerts'\nimport InputMedicine from './Registry/InputMedicine'\nimport OutputMedicine from './Registry/OutputMedicine'\nimport Calendar from './Calendar'\nimport Stock from './Registry/Stock'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentScreen: 'Alerts'\n    }\n  }\n\n  changeScreen (screen) {\n    this.setState({ currentScreen: screen })\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <CssBaseline />\n        <Sidebar\n          changeScreen={this.changeScreen.bind(this)}\n        />\n        <div style={{ marginTop: '75px' }}>\n          {this.state.currentScreen === 'Alerts'\n            ? <Alerts />\n            : null}\n          {this.state.currentScreen === 'InputMedicine'\n            ? <InputMedicine />\n            : null}\n          {this.state.currentScreen === 'Storage'\n            ? <Stock />\n            : null}\n          {this.state.currentScreen === 'OutputMedicine'\n            ? <OutputMedicine />\n            : null}\n          {this.state.currentScreen === 'Calendar'\n            ? <Calendar />\n            : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}